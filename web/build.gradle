buildscript {

    repositories {
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:0.5.0.RELEASE")
        classpath("org.springframework:springloaded:1.2.6.RELEASE")
    }
    ext['tomcat.version'] = '8.5.5'
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.17"
    id 'com.palantir.docker' version "0.13.0"
}


apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

springBoot {
    buildInfo()
}

war {
    baseName = 'web'
    version = '0.0.1-SNAPSHOT'
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURL().toString().replaceFirst('/file:/+/', '/')
            }.join(' ')
        }
    }
}


repositories {
    mavenCentral()
    jcenter()
}

dependencies {

    compile project(':service')

    // spring boot
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.security:spring-security-taglibs'

    compile ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'org.springframework.boot:spring-boot-starter-tomcat'
    }

    /*compile 'org.springframework.session:spring-session:1.3.0.RELEASE'
    compile('org.springframework.session:spring-session-hazelcast:1.3.0.RELEASE') {
        exclude group: 'com.hazelcast'
    }*/
    compile 'org.springframework.session:spring-session-jdbc:1.3.0.RELEASE'
    compile 'org.springframework.boot:spring-boot-devtools'

    compile 'org.apache.tomcat.embed:tomcat-embed-jasper'
    compile 'com.zaxxer:HikariCP'

    // tiles
    compile 'org.apache.tiles:tiles-jsp:3.0.7'

    compile 'javax.servlet:jstl:1.2'

    /*compile 'com.hazelcast:hazelcast:3.7.5'
    compile('com.hazelcast:hazelcast-wm:3.8') {
        exclude group: 'com.hazelcast'
    }*/

    compile 'com.navercorp.lucy:lucy-xss-servlet:2.0.0'

    compile 'net.sargue:java-time-jsptags:1.1.3'

    compile 'org.apache.poi:poi:3.15'

    compile 'net.coobird:thumbnailator:0.4.8'

    compile 'commons-io:commons-io:2.5'
    compile 'commons-fileupload:commons-fileupload:1.3.3'

    compile 'org.quartz-scheduler:quartz:2.2.3'
    compile 'org.quartz-scheduler:quartz-jobs:2.2.3'

    compile 'commons-httpclient:commons-httpclient:3.1'

    testCompile(
            'junit:junit:4.12',
            'org.springframework.boot:spring-boot-starter-test',
            'org.spockframework:spock-core:1.1-groovy-2.4-rc-3',
            'org.spockframework:spock-spring:1.1-groovy-2.4-rc-3',
            'cglib:cglib-nodep:3.2.5',
            'org.codehaus.groovy:groovy-all:2.4.10'
    )

    testRuntime(
            'com.athaydes:spock-reports:1.2.7'
    )
}

bootRun {
    /*addResources = false
    systemProperty 'spring.profiles.active', 'local'*/

    dependsOn pathingJar
    doFirst {
        classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
    }
    systemProperty 'spring.profiles.active', System.properties['spring.profiles.active']
}

docker {
    name "vwa/${war.baseName}"
    files war.archivePath
    buildArgs(['WAR_FILE': "$war.archiveName"])
}
